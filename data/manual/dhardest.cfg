# LOGDCFL complete language NOT FINISHED


S -> LII S
S -> LIS Z
S -> LIF YZ


A1 -> a1
A2 -> a2

B1 -> b1
B2 -> b2

Sigma -> a1
Sigma -> a2
Sigma -> b1
Sigma -> b2
X -> x
Y -> y
Z -> z


#  We have three sections -- Initial, First choice, Second choice.
# So we have 9 possible open close bracket positions
# But we dont habe LFI or LSI so only 7: LII, LIF, LIS, LFF, LFS, LSF, LSS
# LII is a pure DYCK language 
# We also need some interstitial segments. 
#YZ = y b2 Sigma^* z 
#XY =  x b1 Sigma^* y 

GZ -> z
GZ -> Sigma GZ
BGZ -> B2 GZ
YZ -> Y BGZ

GY -> y
GY -> Sigma GY
BGY -> B1 GY
XY -> X BGY

ZY -> Z XY



LII -> A1 B1
LII -> A2 B2
LII -> LII LII
LII -> A1 LII1
LII1 -> LII B1
LII -> A2 LII2
LII2 -> LII B2


## basic ones
LSS -> A2 ZY B2
LSS -> A2 LII ZY B2
LSS -> LII LSS
LSS -> LSS LII
LSS -> LSF LFS
LSS -> LSS LSS


LFF -> A1 YZ B1


# LIF has first bracket in the initial thing and then the second bracket in a first choice.
#Basic ones

LIF -> A1 X B1
LIF -> A1 LII X B1


LIF -> A1 LIF B1
LIF -> A2 LIF B2
# The three pure state ones
LIF -> LIF LFF
LIF -> LII LIF
LIF -> LIS LSF
LIF -> LIF LII

# Basic ones
LIS -> A2 XY B2
LIS -> A2 LII XY B2

LIS -> A1 LIS B1
LIS -> A2 LIS B2
# The three state ones

LIS -> LII LIS
LIS -> LIS LSS
LIS -> LIF LFS
LIS -> LIS LII


# Basic ones

LFS -> A2 YZ XY B2
LFS -> A2 LII YZ XY B2






LFS -> A1 LFS B1
LFS -> A2 LFS B2
# LFI doesnt exist so only two

LFS -> LFF LFS
LFS -> LFS LSS
LFS -> LFS LII
LFS -> LII LFS


LSF -> A1 Z X B1
LSF -> A1 LII Z X B1

LSF -> LSF LFF
LSF -> LSS LSF
LSF -> LSF LII 
LSF -> LII LSF

LFF -> A1 YZ B1
LFF -> A1 LFF B1
LFF -> A2 LFF B2
LFF -> LFF LFF
LFF -> LFS LSF
LFF -> LFF LII





